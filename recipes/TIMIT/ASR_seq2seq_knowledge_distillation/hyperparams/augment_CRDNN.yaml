# Seed needs to be set at top of yaml, before objects with parameters are made
seed: !PLACEHOLDER  # e.g, 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/augment_CRDNN/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Path containing the stored inferences of the different teachers
tea_infer_dir: !PLACEHOLDER

# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/TIMIT
csv_train: !ref <data_folder>/train.csv
csv_valid: !ref <data_folder>/dev.csv
csv_test: !ref <data_folder>/test.csv

# Training parameters
number_of_epochs: 30
batch_size: 8
lr: 0.0005
ctc_weight: 0.1
device: 'cuda:0'

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 40

# teacher models
num_tea: 10

# distillation parameters
pretrain: True

# Path to the teacher model to load the weights from
pretrain_tea_dir: !PLACEHOLDER
strategy: best  # [average, best, weighted]

# Temperature : smooth the distribution of output probability
Temperature: 1
# distillation weight alpha
alpha: 1

# Model parameters
activation: !name:torch.nn.LeakyReLU
dropout: 0.3
cnn_blocks: 2
cnn_channels: (128, 256)
cnn_kernelsize: (3, 3)
rnn_layers: 4
rnn_neurons: 512
rnn_bidirectional: True
dnn_blocks: 2
dnn_neurons: 512
emb_size: 128

# Outputs
output_neurons: 40
blank_index: !ref <output_neurons> - 1

# Decoding parameters
bos_index: !ref <output_neurons> - 1
eos_index: !ref <output_neurons> - 1
min_decode_ratio: 0.0
max_decode_ratio: 1.0
beam_size: 16
length_penalty: 0.1
eos_threshold: 1.5

# Functions
enc: !new:speechbrain.lobes.models.CRDNN.CRDNN
    activation: !ref <activation>
    dropout: !ref <dropout>
    cnn_blocks: !ref <cnn_blocks>
    cnn_channels: !ref <cnn_channels>
    cnn_kernelsize: !ref <cnn_kernelsize>
    time_pooling: True
    rnn_layers: !ref <rnn_layers>
    rnn_neurons: !ref <rnn_neurons>
    rnn_bidirectional: !ref <rnn_bidirectional>
    dnn_blocks: !ref <dnn_blocks>
    dnn_neurons: !ref <dnn_neurons>

emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>

dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
    rnn_type: gru
    attn_type: location
    hidden_size: 256
    attn_dim: 256
    num_layers: 1
    scaling: 1.0
    channels: 10
    kernel_size: 100
    re_init: True
    dropout: 0.5

ctc_lin: !new:speechbrain.nnet.linear.Linear
    n_neurons: !ref <output_neurons>  # 39 phonemes + 1 blank

seq_lin: !new:speechbrain.nnet.linear.Linear
    n_neurons: !ref <output_neurons>  # 39 phonemes + 1 eos

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

optimizer: !new:speechbrain.nnet.optimizers.Adam_Optimizer
    learning_rate: !ref <lr>

lr_annealing: !new:speechbrain.nnet.lr_schedulers.NewBobLRScheduler
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.tdsa.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

compute_features: !new:speechbrain.lobes.features.fbank.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

train_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, phn]

valid_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, phn]

test_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_test>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, phn]

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
    summary_fns:
        PER: !name:speechbrain.utils.train_logger.summarize_error_rate

ctc_cost_kd: !name:speechbrain.nnet.losses.ctc_loss_kd
    blank_index: !ref <blank_index>
    device: !ref <device>

seq_cost_kd: !name:speechbrain.nnet.losses.nll_loss_kd
