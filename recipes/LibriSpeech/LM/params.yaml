# Seed needs to be set at top of yaml, before objects with parameters are made
seed: !PLACEHOLDER  # e.g, 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/RNN/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/librispeech
filename: lm_corpus.h5
data_format: hdf5
label_dict_file: ../ASR_seq2seq/results/rnn_cell/1234/label_dict.pkl
hdf5_train: !ref <data_folder>/<filename>
csv_valid: !ref <data_folder>/dev-clean.csv

# Training parameters
number_of_epochs: 20
batch_size: 32
lr: 0.001
accu_steps: 8
device: 'cuda:0'

# Model parameters
rnn_layers: 1
rnn_neurons: 1024
dnn_neurons: 512
emb_size: 128
dropout: 0.1

# Outputs
output_neurons: 29 # 28 chars + 1 blank/eos/bos
bos_index: !ref <output_neurons> - 1
eos_index: !ref <output_neurons> - 1

# Functions
rnn: !new:speechbrain.nnet.RNN.LSTM
    hidden_size: !ref <rnn_neurons>
    num_layers: !ref <rnn_layers>
    dropout: !ref <dropout>
    bidirectional: False
    re_init: True
    return_hidden: False

emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>

drop: !new:torch.nn.Dropout
    p: !ref <dropout>

dnn: !new:speechbrain.nnet.linear.Linear
    n_neurons: !ref <dnn_neurons>

lin: !new:speechbrain.nnet.linear.Linear
    n_neurons: !ref <output_neurons> # 28 char + 1 eos

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

optimizer: !new:speechbrain.nnet.optimizers.Adam_Optimizer
    learning_rate: !ref <lr>

lr_annealing: !new:speechbrain.nnet.lr_schedulers.NewBobLRScheduler
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

train_loader: !new:speechbrain.data_io.data_io.HDF5DataLoaderFactory
    hdf5_file: !ref <hdf5_train>
    label_dict_file: !ref <label_dict_file>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    data_entries: [char]
    sort_by: char
    local_random: True
    chunk_size: 32768


valid_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [char]

compute_cost: !name:speechbrain.nnet.losses.nll_loss

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
    summary_fns:
        loss: !name:speechbrain.utils.train_logger.summarize_average
