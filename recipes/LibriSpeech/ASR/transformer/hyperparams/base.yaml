# ############################################################################
# Model: E2E ASR with Transformer (LAS)
# Encoder: Transformer Encoder
# Decoder: Transformer Decoder + (CTC/ATT joint) beamsearch + TransformerLM
# Tokens: unigram
# losses: CTC + KLdiv (Label Smoothing loss)
# Training: Librispeech 960h
# Authors:  Jianyuan Zhong
# ############################################################################
# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/Contextnet_Transformer/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
lm_ckpt_file: /network/tmp1/jianyuan.zhong/TransformerLM/e16_gelu_noskip_1024/save/CKPT+2020-10-08+10-20-47+00/model.ckpt # yamllint disable-line rule:line-length

# Tokenizer model
tok_mdl_file: /network/tmp1/jianyuan.zhong/TransformerLM/e16_gelu_noskip_1024/save/5000_unigram.model # yamllint disable-line rule:line-length
tok_voc_file: /network/tmp1/jianyuan.zhong/TransformerLM/e16_gelu_noskip_1024/save/5000_unigram.vocab # yamllint disable-line rule:line-length

# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/librispeech
train_splits: ["train-clean-100", "train-clean-360", "train-other-500"]
dev_split: dev-clean
csv_train: !ref <data_folder>/train-960.csv
csv_valid: !ref <data_folder>/dev-clean.csv
csv_test_clean: !ref <data_folder>/test-clean.csv
csv_test_other: !ref <data_folder>/test-other.csv
data_folder_rirs: !ref <data_folder>

# Training parameters
number_of_epochs: 150
batch_size: 16
lr: 1
ctc_weight: 0.3
gradient_accumulation: 4
loss_reduction: 'batchmean'
device: 'cuda'
multigpu_count: 2  # Set to number of GPUs for multi-gpu training
multigpu_backend: ddp_nccl
token_type: unigram # ["unigram", "bpe", "char"]

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 80

####################### Model parameters ###########################

# Contextnet
alpha: 0.5
dropout: 0.1
num_blocks: 9
conv_channels: (256, 256, 256, 256, 512, 512, 512, 512, 512)
strides: (1, 2, 1, 1, 1, 1, 1, 2, 1)

# Transformer
d_model: 512
nhead: 8
num_encoder_layers: 12
num_decoder_layers: 6
d_ffn: 2048
transformer_dropout: 0.0
activation: !name:torch.nn.GELU
output_neurons: 5000
vocab_size: 5000

# Outputs
blank_index: 0
label_smoothing: 0.1
pad_index: 0
bos_index: 1
eos_index: 2
unk_index: 0

# Decoding parameters
min_decode_ratio: 0.0
max_decode_ratio: 1.0
valid_search_interval: 10
valid_beam_size: 10
test_beam_size: 80
lm_weight: 0.50
ctc_weight_decode: 0.70

####################### Data Loaders ############################
train_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <batch_size>
    sentence_sorting: random
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd]
    add_padding_label: True
    drop_last: True

valid_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: 4
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd]
    add_padding_label: True
    drop_last: True

test_clean_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_test_clean>
    batch_size: 4
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd]
    add_padding_label: True
    drop_last: False

test_other_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_test_other>
    batch_size: 4
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd]
    add_padding_label: True
    drop_last: False

############################## models ################################
tokenizer: !name:speechbrain.tokenizers.SentencePiece.SentencePiece
    model_dir: /network/tmp1/jianyuan.zhong/TransformerLM/e16_gelu_noskip_1024/save/ # yamllint disable-line rule:line-length
    vocab_size: !ref <output_neurons>
    csv_train: !ref <csv_train>
    csv_read: wrd
    model_type: "unigram" # ["unigram", "bpe", "char"]
    max_sentencepiece_length: 16
    character_coverage: 0.9995
    pad_id: -1
    bos_id: !ref <bos_index>
    eos_id: !ref <eos_index>
    unk_id: !ref <unk_index>

CNN: !new:speechbrain.lobes.models.ContextNet.ContextNet
    input_shape: (8, 10, 80)
    alpha: !ref <alpha>
    dropout: !ref <dropout>
    num_blocks: !ref <num_blocks>
    conv_channels: !ref <conv_channels>
    strides: !ref <strides>

Transformer: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR # yamllint disable-line rule:line-length
    input_size: 640
    tgt_vocab: !ref <output_neurons>
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_encoder_layers>
    num_decoder_layers: !ref <num_decoder_layers>
    d_ffn: !ref <d_ffn>
    dropout: !ref <transformer_dropout>
    activation: !ref <activation>
    normalize_before: False

lm_model: !new:speechbrain.lobes.models.transformer.TransformerLM.TransformerLM # yamllint disable-line rule:line-length
    vocab: !ref <output_neurons>
    d_model: 512
    nhead: 8
    num_encoder_layers: 16
    num_decoder_layers: 0
    d_ffn: 2048
    dropout: 0.0
    activation: !name:torch.nn.GELU
    normalize_before: False

ctc_lin: !new:speechbrain.nnet.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <output_neurons>

seq_lin: !new:speechbrain.nnet.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <output_neurons>

model: [
    ["normalize", !ref <normalize>],
    ["CNN", !ref <CNN>],
    ["Transformer", !ref <Transformer>],
    ["seq_lin", !ref <seq_lin>],
    ["ctc_lin", !ref <ctc_lin>]
]

optimizer: !name:torch.optim.Adam
    lr: 0
    betas: (0.9, 0.98)
    eps: 0.000000001

valid_search: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules: [!ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <valid_beam_size>
    ctc_weight: !ref <ctc_weight_decode>
    using_eos_threshold: False
    length_normalization: False


test_search: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules: [!ref <Transformer>, !ref <seq_lin>, !ref <ctc_lin>]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <test_beam_size>
    ctc_weight: !ref <ctc_weight_decode>
    lm_weight: !ref <lm_weight>
    lm_modules: !ref <lm_model>
    using_eos_threshold: False
    length_normalization: False

############ Hyperparameters to pass to the Brain class ##############
log_softmax: !new:torch.nn.LogSoftmax
    dim: -1

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>
    reduction: !ref <loss_reduction>

seq_cost: !name:speechbrain.nnet.losses.kldiv_loss
    label_smoothing: !ref <label_smoothing>
    reduction: !ref <loss_reduction>

noam_annealing: !new:speechbrain.nnet.schedulers.NoamScheduler
    lr_initial: !ref <lr>
    n_warmup_steps: 25000
    model_size: !ref <d_model>

cosine_annealing: !new:speechbrain.nnet.schedulers.CyclicCosineScheduler
    n_warmup_steps: 25000

checkpointer: !new:speechbrain.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        noam_scheduler: !ref <noam_annealing>
        cosine_scheduler: !ref <cosine_annealing>
        normalizer: !ref <normalize>
        counter: !ref <epoch_counter>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

normalize: !new:torch.nn.LayerNorm
    - !ref <n_mels>

augmentation: !new:speechbrain.lobes.augment.tdsa.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

env_corrupt: !new:speechbrain.lobes.EnvCorrupt
    openrir_folder: !ref <data_folder_rirs>
    babble_prob: 0.0
    reverb_prob: 0.0
    noise_prob: 1.0
    noise_snr_low: 0
    noise_snr_high: 15

compute_features: !new:speechbrain.lobes.features.fbank.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

train_logger: !new:speechbrain.FileTrainLogger
    save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.ErrorRateStats
acc_computer: !name:speechbrain.AccuracyStats
